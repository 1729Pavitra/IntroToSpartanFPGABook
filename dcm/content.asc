Using the Digital Clock Manager
-------------------------------

One of the other resources on the Spartan 3E FPGA is the
Digital Clock Manager. These are very handy!

What are Digital Clock Managers?
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
DCMs receive an incoming clock and can do the following and more:

* Generate a faster or slower clock signal using an input clock as a reference

* Generate signals with a known phase shift (e.g. 90, 180 or 270 degrees out of phase)

* Correct clock duty cycles, ensuring that the high and low times are 50%.

* Phase shift the internal FPGA clock signals to compensate for internal clock distribution delays

DCMs can also be cascaded, allowing multiple clocks to be used. For example
one external 50MHz clock can be used to generate 100MHz controlling memory 
and 25MHz for the VGA pixel clock

Because of this flexibility they are quite complex to use. I find using
the Core Generator is the best way configure a DCM.

Using the Wizard
~~~~~~~~~~~~~~~~
Pick any project you like, and add a "New Source", using the "IP (Core
Generator...)" option to create a component "my_dcm":

image:dcm/m14s1.png[]

One again choose the "Only IP compatible with chosen part" 
option, then drill down to "Single DCM_SP":

image:dcm/m14s2.png[]

Click "Next" then "Finish" to start the Core Generator.

You will then be presented with this dialog box:

image:dcm/m14s3.png[]

Just click "OK" to open the Clocking Wizard's General Setup dialogue box:

Here you can choose what signals you will use and set the input clock 
frequency. The most common outputs I use is the CLKFX (which is the synthesized
output frequency). You may want to untick the RST (reset) signal
if this is the only clock for the entire project:

image:dcm/m14s4.png[]

The next screen allows you to choose what clock buffers are being used. For 
most projects you will use "Global Buffers" - being global the clock signal
is available to all logic on the FPGA:

image:dcm/m14s5.png[]

The next screen is the interesting one - it's where you get to set the 
output frequency. Input the desired frequency and press "Calculate":

image:dcm/m14s6.png[]

You will now get the summary screen, where you can click "Finish":

image:dcm/m14s7.png[]

Once generated you will be able to use the instantiation templates 
to add a "my_dcm" component to your project.

Project - Use a DCM
~~~~~~~~~~~~~~~~~~~

* Add a DCM to one of your projects (e.g. project 4.1). 

NOTE: Remember to update not only the signal monitored by rising_edge(),
but also the signal used on the process sensitivity list.
